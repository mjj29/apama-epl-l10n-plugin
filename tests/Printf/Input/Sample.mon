/*
 * Sample to demonstrate use of the L10N gettext plugin
 * Copyright (c) 2020 Software AG, Darmstadt, Germany and/or its licensors
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at
 * http:/www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied.
 * See the License for the specific language governing permissions and limitations under the License. 
 */

using com.apamax.L10N;

event A {}

monitor SampleMon
{
	// convenience functions for L10N
	L10N l10n;
	action _(string s) returns string { return l10n.gettext(s); }
	action _N(string s1, string s2, integer n) returns string { return l10n.ngettext(s1, s2, n); }
	action printf(string f, sequence<any> a) { print l10n.printf(f, a); }

	action onload()
	{
		// 0 args
		printf("0 arg string", new sequence<any>);
		// 1 arg string
		printf("1 arg string: %s", [<any>"Hello World"]);
		// 1 arg integer
		printf("1 arg integer: %d", [<any>42]);
		// 1 arg float
		printf("1 arg float: %f", [<any>3.14]);
		// 2 args in order
		printf("2 args: %s %s", [<any>"Hello", "World"]);
		// 2 args out of order
		printf("ordering: %2$s %1$f", [<any>3.14, "Hello"]);
		// insufficient args
		printf("insufficent args: %s %f %d", [<any>"Hello"]);
		// too many args
		printf("excess args: %s", [<any>"Hello", "World", "How", "are", "you"]);
		// format specifier
		printf("format: %.2f", [<any>float.PI]);
		// wrong specifier
		printf("wrong: %s %d", [<any>42, <any>"Hello"]);
	}
}
